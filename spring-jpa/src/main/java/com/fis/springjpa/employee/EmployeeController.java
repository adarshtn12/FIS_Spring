package com.fis.springjpa.employee;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import net.bytebuddy.dynamic.DynamicType.Builder.FieldDefinition.Optional;

@RestController // This means that this class is a Controller
@RequestMapping(path="/employee") // This means URL's start with /demo (after Application path)
public class EmployeeController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private EmployeeRepository employeeRepository;

  @PostMapping(path="/add") // Map ONLY POST Requests
  public @ResponseBody String addNewEmployee (@RequestParam String name
      , @RequestParam String email) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

	  Employee n = new Employee();
    n.setName(name);
    n.setEmail(email);
    employeeRepository.save(n);
    return "Saved";
  }
  
  @PutMapping
  public String updateEmployee(@RequestBody Employee employee) {
	  java.util.Optional<Employee> e = employeeRepository.findById(employee.getId());
			  if(e.isPresent()) {
				  employeeRepository.save(employee);
				  return "Updated";
			  } else {
				  return "Employee Not Found!!";
			  }
	  
  }
  

  @GetMapping(path="/all")
  public @ResponseBody Iterable<Employee> getAllEmployees() {
    // This returns a JSON or XML with the users
    return employeeRepository.findAll();
  }
  
}
